name: Build and Publish Docker

on:
  push:
    tags:
      - '@docker/*'

jobs:
  on-success:
    needs: docker
    runs-on: ubuntu-latest
    if: ${{ always() && needs.publish.result == 'success' }}
    steps:
      - name: Notification Feishu
        uses: whatwewant/action-robot-feishu@v0.0.13
        with:
          url: ${{ secrets.DOCKER_VERSION_FEISHU_BOT_WEBHOOK_URL }}
          title: '✅ Docker 发布：${{ github.repository }}'
          text: |
            分支: ${{ github.ref }}
            提交信息: ${{ github.event.head_commit.message }}
            提交人: ${{ github.actor }}
            状态: 构建成功（https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}）

  on-failure:
    needs: docker
    runs-on: ubuntu-latest
    if: ${{ always() && needs.publish.result == 'failure' }}
    steps:
      - name: Notification Feishu
        uses: whatwewant/action-robot-feishu@v0.0.13
        with:
          url: ${{ secrets.DOCKER_VERSION_FEISHU_BOT_WEBHOOK_URL }}
          title: '❌ Docker 发布：${{ github.repository }}'
          text: |
            分支: ${{ github.ref }}
            提交信息: ${{ github.event.head_commit.message }}
            提交人: ${{ github.actor }}
            状态: 构建失败（https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}）

  docker:
    runs-on: ubuntu-latest

    steps:
      - name: Get Current Date
        id: date
        run: |
          env
          echo "::set-output name=date::$(date +'%Y-%m-%d')"

      - uses: actions/checkout@v2
        with:
          fetch-depth: '0'

      - name: Docker Meta
        id: meta
        run: |
          APP=$(echo ${GITHUB_REF} | sed -e "s%refs/tags/@docker/%%g" | awk -F "@" '{print $1}')
          VERSION=$(echo ${GITHUB_REF} | sed -e "s%refs/tags/@docker/%%g" | awk -F "@" '{print $2}')
          APP_DIR=$(echo $APP | sed -e "s/spider-//g")
          APP_CONTEXT=examples/${APP_DIR}
          IMAGE=${ACTION_REGISTRY}/${ACTION_NAMESPACE}/${APP}:${VERSION}
          echo "CONTEXT: ${APP_CONTEXT}"
          echo "IMAGE: ${IMAGE}"
          echo "::set-output name=tags::${IMAGE}"
          echo "::set-output name=context::${APP_CONTEXT}"
        shell: bash
        env:
          ACTION_REGISTRY: ${{ secrets.PRIVATE_DOCKER_REGISTRY }}
          ACTION_NAMESPACE: ${{ secrets.PRIVATE_DOCKER_NAMESPACE }}

      - name: Show Docker Tags
        run: |
          echo "Docker Tags: ${{ steps.meta.outputs.tags }}"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Private Docker Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.PRIVATE_DOCKER_REGISTRY }}
          username: ${{ secrets.PRIVATE_DOCKER_USERNAME }}
          password: ${{ secrets.PRIVATE_DOCKER_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ${{ steps.meta.outputs.context }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          # labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64,linux/arm/v7
